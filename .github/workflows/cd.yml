name: CD

on: [push]

jobs:
  build:
    name:
      ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-18.04]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: checkout vcell-solvers repo
        uses: actions/checkout@v2

      - name: Install MacOS dependencies
        if: matrix.platform == 'macos-latest'
        shell: bash
        run: |
          brew install boost
          brew install hdf5
          brew install ninja

          brew install llvm
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
          ln -s /usr/local/bin/gfortran-12 /usr/local/bin/gfortran
          
          gcc --version
          gfortran --version
          cmake --version
          brew info boost
          brew info hdf5

      - name: Build Macos
        if: matrix.platform == 'macos-latest'
        run: |
          platform=macos
          echo "working dir is $PWD"

          mkdir build
          cd build

          export PATH="/usr/local/opt/llvm/bin:$PATH"

          cmake \
          -G Ninja \
          -DCMAKE_C_COMPILER=/usr/local/opt/llvm/bin/clang \
          -DCMAKE_CXX_COMPILER=/usr/local/opt/llvm/bin/clang++ \
          -DOPTION_TARGET_MESSAGING=OFF \
          -DOPTION_TARGET_PARALLEL=OFF \
          -DOPTION_TARGET_CHOMBO2D_SOLVER=OFF \
          -DOPTION_TARGET_CHOMBO3D_SOLVER=OFF \
          -DOPTION_TARGET_SMOLDYN_SOLVER=ON \
          -DOPTION_TARGET_FV_SOLVER=ON \
          -DOPTION_TARGET_STOCHASTIC_SOLVER=ON \
          -DOPTION_TARGET_NFSIM_SOLVER=ON \
          -DOPTION_TARGET_MOVINGBOUNDARY_SOLVER=OFF \
          -DOPTION_TARGET_SUNDIALS_SOLVER=ON \
          -DOPTION_TARGET_HY3S_SOLVERS=OFF \
          -B . -S ..

          ninja
          
          ctest -VV
          
          ./bin/FiniteVolume_x64 || true
          ./bin/NFsim_x64 || true
          ./bin/SundialsSolverStandalone_x64 || true
          ./bin/VCellStoch_x64 || true
          ./bin/smoldyn_x64 || true
          ./bin/testzip || true
          ./bin/ziptool || true

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() || matrix.platform != 'macos-latest'}}

#
#      # setup windows
#      - name: Windows setup
#        shell: powershell
#        # Checking for msys64
#        run: |
#          mkdir build
#          cd build
#          mkdir bin
#      - name: run cmake
#        shell: cmd
#        working-directory: ${{runner.workspace}}\vcell-solvers\build
#        run: |
#          cd build
#          cmake -G "Unix Makefiles" `
#              -DCMAKE_BUILD_TYPE="Release" `
#              -DOPTION_TARGET_MESSAGING=OFF `
#              -DOPTION_TARGET_PARALLEL=OFF `
#              -DOPTION_TARGET_CHOMBO2D_SOLVER=OFF `
#              -DOPTION_TARGET_CHOMBO3D_SOLVER=OFF `
#              -DOPTION_TARGET_SMOLDYN_SOLVER=ON `
#              -DOPTION_TARGET_FV_SOLVER=ON `
#              -DOPTION_TARGET_STOCHASTIC_SOLVER=ON `
#              -DOPTION_TARGET_NFSIM_SOLVER=ON `
#              -DOPTION_TARGET_MOVINGBOUNDARY_SOLVER=OFF `
#              -DOPTION_TARGET_SUNDIALS_SOLVER=ON `
#              -DOPTION_TARGET_HY3S_SOLVERS=ON `
#                ..
#          make